@startuml
!include ../repositories/EthernetSwitchRepository.puml
!include ../repositories/EthernetSwitchPortRepository.puml
!include ../repositories/EthernetSwitchVLANRepository.puml
!include ../providers/EthernetSwitchManagerProvider.puml
!include ../dto/EthernetSwitch/EthernetSwitchCreateDto.puml
!include ../dto/EthernetSwitch/EthernetSwitchUpdateDto.puml
!include ../dto/EthernetSwitch/EthernetSwitchDto.puml
!include ../dto/EthernetSwitch/EthernetSwitchModelDto.puml
!include ../dto/EthernetSwitchPort/EthernetSwitchPortCreateDto.puml
!include ../dto/EthernetSwitchPort/EthernetSwitchPortUpdateDto.puml
!include ../dto/EthernetSwitchPort/EthernetSwitchPortDto.puml
!include ../dto/EthernetSwitchVLAN/EthernetSwitchVLANDto.puml
!include ../dto/EthernetSwitchVLAN/EthernetSwitchVLANCreateDto.puml
!include ../dto/EthernetSwitchVLAN/EthernetSwitchVLANUpdateDto.puml

package app {
    class EthernetSwitchService {
        -switchRepo interfaces.IGenericRepository[domain.EthernetSwitch]
        --
        -portRepo interfaces.IGenericRepository[domain.EthernetSwitchPort]
        --
        -vlanRepo interfaces.IGenericRepository[domain.EthernetSwitchVLAN]
        --
        -managers interfaces.IEthernetSwitchManagerProvider[domain.EthernetSwitchVLAN]
        --
        +GetList(ctx context.Context, search, orderBy, orderDirection string, page, pageSize int) (dtos.PaginatedItemsDto[dtos.EthernetSwitchDto], error)
        --
        +GetByID(ctx context.Context, id uuid.UUID) (dtos.EthernetSwitchDto, error)
        --
        +Create(ctx context.Context, createDto dtos.EthernetSwitchCreateDto) (dtos.EthernetSwitchDto, error)
        --
        +Update(ctx context.Context, updateDto dtos.EthernetSwitchUpdateDto, id uuid.UUID) (dtos.EthernetSwitchDto, error)
        --
        +Delete(ctx context.Context, id uuid.UUID) error
        --
        +GetSupportedModels() []dtos.EthernetSwitchModelDto
        --
        +GetPortByID(ctx context.Context, switchID, id uuid.UUID) (dtos.EthernetSwitchPortDto, error)
        --
        +CreatePort(ctx context.Context, switchID uuid.UUID, createDto dtos.EthernetSwitchPortCreateDto) (dtos.EthernetSwitchPortDto, error)
        --
        +UpdatePort(ctx context.Context, switchID, id uuid.UUID, updateDto dtos.EthernetSwitchPortUpdateDto) (dtos.EthernetSwitchPortDto, error)
        --
        +GetPorts(ctx context.Context, switchID uuid.UUID, search, orderBy, orderDirection string, page, pageSize int) (dtos.PaginatedItemsDto[dtos.EthernetSwitchPortDto], error)
        --
        +DeletePort(ctx context.Context, switchID, id uuid.UUID) error
        --
        +GetVLANByID(ctx context.Context, switchID, id uuid.UUID) (dtos.EthernetSwitchVLANDto, error)
        --
        +GetVLANs(ctx context.Context, switchID uuid.UUID, search, orderBy, orderDirection string, page, pageSize int) (dtos.PaginatedItemsDto[dtos.EthernetSwitchVLANDto], error)
        --
        +CreateVLAN(ctx context.Context, switchID uuid.UUID, createDto dtos.EthernetSwitchVLANCreateDto) (dtos.EthernetSwitchVLANDto, error)
        --
        +UpdateVLAN(ctx context.Context, switchID, id uuid.UUID, updateDto dtos.EthernetSwitchVLANUpdateDto) (dtos.EthernetSwitchVLANDto, error)
        --
        +DeleteVLAN(ctx context.Context, switchID, id uuid.UUID) error
    }

    note left of EthernetSwitchService::GetSupportedModels
    Get ethernet switch models that supported by system
    end note

    note left of EthernetSwitchService
        Advanced business logic for EthernetSwitch entity:
        DTO Validation
        Checking the uniqueness of serial numbers
        Checking the uniqueness of addresses
    end note

    EthernetSwitchRepository -right- EthernetSwitchService::switchRepo
    EthernetSwitchPortRepository -right- EthernetSwitchService::portRepo
    EthernetSwitchVLANRepository -right- EthernetSwitchService::vlanRepo
    EthernetSwitchManagerProvider -- EthernetSwitchService::managers
    EthernetSwitchService .[hidden]up. IGenericRepository
    EthernetSwitchPortRepository .[hidden]down. EthernetSwitchRepository

    note as EthernetSwitchServiceTypes
    EntityType is EthernetSwitch
    CreateDtoType is EthernetSwitchCreateDto
    UpdateDtoType is EthernetSwitchUpdateDto
    DtoType is EthernetSwitchDto
    end note

    EthernetSwitchService .down. EthernetSwitchServiceTypes

    EthernetSwitchServiceTypes .. EthernetSwitchCreateDto
    EthernetSwitchServiceTypes .. EthernetSwitchUpdateDto
    EthernetSwitchServiceTypes .. EthernetSwitchDto

}
@enduml
